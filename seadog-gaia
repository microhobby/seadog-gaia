#!/bin/bash

set -E
trap '[ "$?" -ne 22 ] || exit 22' ERR

# use message utils
. ./utils/fancyTerminalUtils.sh --source-only
. ./utils/welcome.sh --source-only

# Seadog version
export SEADOG_MAJOR_VERSION=0
export SEADOG_MINOR_VERSION=0
export SEADOG_BUILD_VERSION=0

# Alpine version
export ALPINE_VERSION="3.16.2"
export ALPINE_MAJ_VERSION="v3.16"

# for development and enginerring versions
if [[ ! -v SEADOG_DEV ]]; then
    export SEADOG_BUILD_VERSION=$((SEADOG_BUILD_VERSION+1))
else
    export SEADOG_BUILD_VERSION="$SEADOG_DEV"
fi

export SEADOG_NAME="war-never-changes-ü™ñ-üíÄ"

# create the files from templates
function replaceVersions () {
    sed "s/{{v1}}/${SEADOG_MAJOR_VERSION}/" $1.template > $1
    sed -i "s/{{v2}}/${SEADOG_MINOR_VERSION}/" $1
    sed -i "s/{{v3}}/${SEADOG_BUILD_VERSION}/" $1
    sed -i "s/{{codename}}/${SEADOG_NAME}/" $1
}

# you can use to set how many threads for the build
if [[ ! -v JOBS ]]; then
	export JOBS=$(nproc)
fi

export SEADOG_BOARD=$1
export CLEAN="$2"
export UBOOT_BRANCH_ARG="$3"
export KERNEL_BRANCH_ARG="$4"
export arg=""

function setUBootBranch () {
    if [ "$UBOOT_BRANCH_ARG" == "" ]; then
        export UBOOT_BRANCH=$1
    else
        export UBOOT_BRANCH=$UBOOT_BRANCH_ARG
    fi
}

function setKernelBranch () {
    if [ "$KERNEL_BRANCH_ARG" == "" ]; then
        export KERNEL_BRANCH=$1
    else
        export KERNEL_BRANCH=$KERNEL_BRANCH_ARG
    fi
}

# welcome
seadogWelcomeColor

# debug arguments
function printConfigurationEnvironment () {
    echo -e "üçü BOARD         \t::\t ${SEADOG_BOARD}"
    echo -e "üßπ CLEAN         \t::\t ${CLEAN}"
    echo -e "üë¢ UBOOT_BRANCH  \t::\t ${UBOOT_BRANCH}"
    echo -e "üë¢ KERNEL_BRANCH \t::\t ${KERNEL_BRANCH}"
    echo -e "üí™ JOBS          \t::\t ${JOBS}"
    echo ""
    echo -e "üê∂ VERSION       \t::\t ${SEADOG_MAJOR_VERSION}.${SEADOG_MINOR_VERSION}.${SEADOG_BUILD_VERSION}"
    echo -e "üê∂ CODE NAME     \t::\t ${SEADOG_NAME}"
    echo ""
    sleep 2s
}

# call the boards script
if test -f "boards/$1.sh"; then
    . boards/$1.sh --source-only
    boardPipeline
else
    writelnError "What? ü§∑"
    writelnError "üö´ ${BOLD}$1${RED} Not implemented ..."

    echo ""
    echo "Supported hardwares:"
    echo -e "Raspberry Pi 3B \t::\t bcm2837-rpi-3b"
    echo -e "Raspberry Pi 3B+ \t::\t bcm2837-rpi-3bp"
    echo -e "Raspberry Pi 4B \t::\t bcm2711-rpi-4b"
    echo -e "Intel x86_64 Generic \t::\t x86-64"

    echo ""
    echo "How to use example:"
    echo -e "\t SEADOG_DEV='TEST' JOBS=8 ./seadog-gaia SEADOG_BOARD CLEAN UBOOT_BRANCH KERNEL_BRANCH"
    echo ""


    exit 1
fi

writeln "üê∂  SEADOG LINUX DISTRO v$SEADOG_MAJOR_VERSION.$SEADOG_MINOR_VERSION.$SEADOG_BUILD_VERSION"
